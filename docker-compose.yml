version: '3.7'

services:
  drone-server:
    container_name: drone_server
    image: drone/drone:2
    networks:
      - drone
    ports:
      - "8081:80"
      - "4443:443"
    restart: always
    environment:
      DRONE_GITHUB_CLIENT_ID: ${DRONE_GITHUB_CLIENT_ID}
      DRONE_GITHUB_CLIENT_SECRET: ${DRONE_GITHUB_CLIENT_SECRET}
      DRONE_RPC_SECRET: ${DRONE_RPC_SECRET}
      DRONE_SERVER_HOST: ${DRONE_SERVER_HOST}
      DRONE_SERVER_PROTO: ${DRONE_SERVER_PROTO}

  drone-runner:
    container_name: drone-runner
    image: drone/drone-runner-docker:linux-amd64
    privileged: true
    networks:
      - drone
    restart: always
    ports:
      - "3000:3000"
    environment: 
      - DRONE_RUNNER_NAME=${DRONE_RUNNER_NAME}
      - DRONE_RUNNER_CAPACITY=${DRONE_RUNNER_CAPACITY}
      - DRONE_RPC_HOST=${DRONE_SERVER_HOST}
      - DRONE_RPC_PROTO=${DRONE_SERVER_PROTO}
      - DRONE_RPC_SECRET=${DRONE_RPC_SECRET}
    depends_on:
      - drone-server

networks:
  drone:
    name: drone_network

volumes:
  drone_postgres_data:
    driver: local